(defstruct Person
  name (string 100)
  age :uint256)

(defvars
    nums (public (array :uint256 10)) ;; fixed size list, must be bounded
    myMap (public (hash-map :address :uint256))
    person (public Person))

(defn __init__ [] :external
  (set-at self/nums 0 123) ;; this updates self.nums[0]
  (set-at self/nums 9 456) ;; this updates self.nums[9]

  ;; copies self.nums to array in memory
  (defvar arr (array :uint256 10) self/nums)
  ;; does not modify self/nums
  (set-at arr 0 123)

  ;; this updates self/myMap
  (set-at self/myMap msg/sender 1)
  (set-at self/myMap msg/sender 11)

  ;; this updates self/person
  (set-in self/person age 11)
  (set-in self/person name "Vyper")

  ;; Person struct is copied into memory
  (defvar p Person self/person)
  (set-in p name "Solidity")
  )
